import matplotlib.pyplot as plt

sgd_train = [0.3946494, 0.43655357, 0.45026305, 0.47289363, 0.49744567, 0.5199085, 0.5403889, 0.5636599,
             0.59060615, 0.625467, 0.66441476, 0.71112466, 0.7570263, 0.80381244, 0.83762103, 0.86879146,
             0.8980557, 0.91719407, 0.93212354, 0.94372857, 0.9533664, 0.9626687, 0.9672741, 0.9724285,
             0.97744566, 0.9798246, 0.9814106, 0.9814411, 0.98357606, 0.9851315, 0.987907, 0.98722076,
             0.9899504, 0.9891422, 0.99327487, 0.9927259, 0.99324435, 0.9940374, 0.9907434, 0.99522686,
             0.9953946, 0.99402213, 0.99306136, 0.99350363, 0.99550134, 0.9985665, 0.9980785, 0.99458635,
             0.99540985, 0.9965078]

sgd_val = [0.41399336, 0.42146018, 0.45768806, 0.48230088, 0.5011062, 0.52571905, 0.5409292, 0.5528208,
           0.5608407, 0.5575221, 0.57992256, 0.59457964, 0.5829646, 0.5862832, 0.585177, 0.60896015, 0.59457964,
           0.6020465, 0.6125553, 0.60868365, 0.6285951, 0.6225111, 0.6214049, 0.63384956, 0.6498894, 0.6482301,
           0.6465708, 0.6308075, 0.6490597, 0.647677, 0.6368916, 0.64961284, 0.642146, 0.6670354, 0.65486723,
           0.6568031, 0.6706305, 0.6670354, 0.66288716, 0.6653761, 0.6642699, 0.6609513, 0.6598451, 0.64629424,
           0.6664823, 0.67809737, 0.6816925, 0.65099555, 0.6601217, 0.66150445]

adam_train = [0.42019817, 0.47725505, 0.5370797, 0.58542126, 0.63052994, 0.6718109, 0.7128936, 0.746382, 0.77903163,
              0.8077468, 0.826809, 0.8472894, 0.86845595, 0.8783988, 0.8912238, 0.9042928, 0.91525733, 0.9220282,
              0.9274114, 0.933679, 0.9421883, 0.94691575, 0.94982845, 0.9544796, 0.9562486, 0.95849025, 0.96440715,
              0.96544415, 0.96669465, 0.96666414, 0.97130007, 0.9721998, 0.9728555, 0.97332823, 0.97645444, 0.97662216,
              0.9773847, 0.9802974, 0.9808006, 0.9801144, 0.9824171, 0.9801601, 0.9821273, 0.985589, 0.9837743,
              0.9834388, 0.98443, 0.98627526, 0.9861228, 0.98400307]

adam_val = [0.44469026, 0.49751106, 0.54065263, 0.56913716, 0.5901549, 0.6073009, 0.616427, 0.60259956, 0.60536504,
            0.6095133, 0.61117256, 0.6147677, 0.6120022, 0.60978985, 0.6167035, 0.59070796, 0.5887721, 0.5976217,
            0.59292036, 0.61615044, 0.6081305, 0.60481197, 0.6178097, 0.6070243, 0.61725664, 0.62057525, 0.6175332,
            0.61974555, 0.6056416, 0.5926438, 0.5915376, 0.60868365, 0.6114491, 0.6106195, 0.6056416, 0.59568584,
            0.6186394, 0.6175332, 0.6186394, 0.60038716, 0.6136615, 0.60536504, 0.59928095, 0.5998341, 0.61283183,
            0.5998341, 0.6045354, 0.60757744, 0.5948562, 0.6067478]

rmsprop_train = [0.42082316, 0.5053145, 0.5457415, 0.57502097, 0.5968433, 0.6132367, 0.6281662, 0.63967973, 0.6522455,
                 0.66179186, 0.6721769, 0.6785208, 0.6904308, 0.68820435, 0.6926725, 0.69778115, 0.71734655, 0.7174838,
                 0.7171483, 0.72930235, 0.73704916, 0.7465345, 0.7514297, 0.75452536, 0.7626839, 0.7710408, 0.76889056,
                 0.7677926, 0.77467024, 0.77650017, 0.78836447, 0.7896149, 0.801281, 0.8030042, 0.8028822, 0.8091956,
                 0.8112238, 0.8126268, 0.82525355, 0.827724, 0.826138, 0.8328479, 0.8357606, 0.83762103, 0.83983225,
                 0.8445902, 0.84469694, 0.84295845, 0.8397865, 0.8471521]

rmsprop_val = [0.45298672, 0.54728985, 0.5658186, 0.57190263, 0.5807522, 0.5931969, 0.5931969, 0.576604, 0.5757743,
               0.5948562, 0.57411504, 0.59292036, 0.5813053, 0.5577987, 0.58102876, 0.5909845, 0.5835177, 0.5824115,
               0.59292036, 0.6020465, 0.60536504, 0.58600664, 0.57356197, 0.55724555, 0.5445243, 0.60591817, 0.5948562,
               0.58711284, 0.60425884, 0.5995575, 0.5790929, 0.6020465, 0.5782633, 0.5887721, 0.59928095, 0.5707965,
               0.55033183, 0.54397124, 0.6017699, 0.59679204, 0.5876659, 0.5738385, 0.57466817, 0.5807522, 0.6009403,
               0.5954093, 0.5890487, 0.58268803, 0.58821905, 0.46321902]

plt.plot(sgd_train, label='SGD_train')
plt.plot(sgd_val, label='SGD_val')
plt.plot(rmsprop_train, label='RMSprop_train', marker='x')
plt.plot(rmsprop_val, label='RMSprop_val', marker='x')
plt.plot(adam_train, label='Adam_train', marker='.')
plt.plot(adam_val, label='Adam_val', marker='.')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.4, 1])
plt.legend(loc='upper left')

plt.grid(True)
plt.show()

sgd_train = [0.66243064, 0.70840824, 0.7165483, 0.7211232, 0.7239312, 0.72787505, 0.7317558, 0.7354157, 0.73913866,
             0.7425146, 0.7480675, 0.751191, 0.7545985, 0.75888944, 0.76305413, 0.7674712, 0.77412844, 0.7801546,
             0.7863701, 0.7928695, 0.8016091, 0.8079192, 0.81706893, 0.82653415, 0.8397539, 0.8504496, 0.86297524,
             0.8737656, 0.89023507, 0.8956933, 0.90487456, 0.91304624, 0.92153335, 0.9285376, 0.93377507, 0.9403691,
             0.9481622, 0.9499606, 0.95437765, 0.95942575, 0.96179205, 0.9648525, 0.97087866, 0.9702792, 0.97229844,
             0.97397065, 0.9758952, 0.97889256, 0.97778827, 0.9785455]

sgd_val = [0.6897727, 0.6670455, 0.65170455, 0.6715909, 0.7130682, 0.6931818, 0.7096591, 0.71079546, 0.72386366,
           0.71875, 0.7335227, 0.7278409, 0.7318182, 0.72329545, 0.73295456, 0.72897726, 0.7443182, 0.7443182,
           0.7039773, 0.74715906, 0.74488634, 0.7426136, 0.72670454, 0.73977274, 0.7335227, 0.7596591, 0.7465909,
           0.75284094, 0.75, 0.7227273, 0.74375, 0.7125, 0.71363634, 0.7403409, 0.72897726, 0.76193184, 0.7568182,
           0.7647727, 0.725, 0.76931816, 0.7534091, 0.76193184, 0.7596591, 0.77102274, 0.77670455, 0.7568182, 0.7704545,
           0.74147725, 0.7721591, 0.7477273]

adam_train = [0.6757379, 0.7149708, 0.7236157, 0.7392018, 0.7513803, 0.7604039, 0.7694589, 0.7798706, 0.7930273,
              0.7996214, 0.81179994, 0.8225272, 0.83754534, 0.850071, 0.8592838, 0.87480676, 0.8834201, 0.89402115,
              0.89976335, 0.9038965, 0.9131409, 0.9200189, 0.9285692, 0.9263922, 0.93320715, 0.9370563, 0.93664616,
              0.9422622, 0.945228, 0.94806755, 0.9513804, 0.9535574, 0.9565231, 0.9546301, 0.95854235, 0.9599621,
              0.9589841, 0.9632434, 0.9685755, 0.96633536, 0.96598834, 0.96655625, 0.9700899, 0.97289795, 0.97359204,
              0.9740022, 0.9750118, 0.9757375, 0.9783878, 0.9778829]

adam_val = [0.64602274, 0.66988635, 0.6943182, 0.7403409, 0.7477273, 0.7375, 0.74886364, 0.7607955, 0.76193184,
            0.7653409, 0.7653409, 0.75795454, 0.75454545, 0.7403409, 0.7318182, 0.7443182, 0.76363635, 0.7556818,
            0.7477273, 0.74545455, 0.7318182, 0.74375, 0.73238635, 0.75454545, 0.75852275, 0.7517046, 0.75795454,
            0.74147725, 0.7409091, 0.74715906, 0.7431818, 0.74147725, 0.7465909, 0.73636365, 0.76022726, 0.73238635,
            0.75454545, 0.7607955, 0.74488634, 0.7613636, 0.7465909, 0.72329545, 0.74375, 0.74545455, 0.74147725,
            0.7443182, 0.74886364, 0.75454545, 0.74147725, 0.7261364]

rmsprop_train = [0.66952574, 0.71411896, 0.72711784, 0.7379397, 0.74421835, 0.75292635, 0.7569333, 0.7622653, 0.766714,
                 0.7669664, 0.764253, 0.7657359, 0.76393753, 0.7660514, 0.7698375, 0.7663985, 0.7676921, 0.76917493,
                 0.76835465, 0.7737498, 0.76974285, 0.7708156, 0.7685755, 0.7705632, 0.769522, 0.7733081, 0.7702792,
                 0.77466476, 0.7753273, 0.7780092, 0.78192145, 0.77627385, 0.7718568, 0.7722354, 0.77393913, 0.77229846,
                 0.7749487, 0.77141505, 0.77340275, 0.760183, 0.77214074, 0.7635274, 0.7578798, 0.75431454, 0.76141346,
                 0.7615081, 0.7613819, 0.75797445, 0.7663985, 0.7423253]

rmsprop_val = [0.6988636, 0.6943182, 0.69261366, 0.71079546, 0.7477273, 0.7125, 0.7255682, 0.7255682, 0.62954545,
               0.7125, 0.7255682, 0.7346591, 0.73977274, 0.73125, 0.71761364, 0.7153409, 0.73977274, 0.72897726,
               0.6659091, 0.7539773, 0.70454544, 0.74147725, 0.7056818, 0.68863636, 0.7096591, 0.74488634, 0.71988636,
               0.7261364, 0.7164773, 0.7130682, 0.7386364, 0.69943184, 0.67897725, 0.7318182, 0.71875, 0.7426136,
               0.7255682, 0.6, 0.58181816, 0.6653409, 0.74375, 0.5647727, 0.7443182, 0.75113636, 0.71420455, 0.6693182,
               0.66136366, 0.71079546, 0.66136366, 0.6982955]

plt.plot(sgd_train, label='SGD_train', color='blue')
plt.plot(sgd_val, label='SGD_val', color='blue', marker='^')
plt.plot(rmsprop_train, label='RMSprop_train', color='red')
plt.plot(rmsprop_val, label='RMSprop_val', color='red', marker='x')
plt.plot(adam_train, label='Adam_train', color='green')
plt.plot(adam_val, label='Adam_val', color='green', marker='.')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.5, 1])
plt.legend(loc='lower center')

plt.grid(True)
plt.show()

sgd_train = [0.795274, 0.8241012, 0.8420456, 0.8538353, 0.8626099, 0.8703034, 0.87708193, 0.8838812, 0.8905142,
             0.89825964, 0.9034267, 0.9148317, 0.9241574, 0.9360198, 0.9384526, 0.95457757, 0.9573327, 0.9677396,
             0.9708586, 0.9775539, 0.98514336, 0.9868172, 0.98819995, 0.9885534, 0.99288875, 0.9931487, 0.99137086,
             0.9948849, 0.9964756, 0.9973073, 0.9973073, 0.9965795, 0.9967875, 0.99795187, 0.9987628, 0.9976504,
             0.9980974, 0.99797267, 0.99779594, 0.9972345, 0.9963924, 0.99772316, 0.9987108, 0.9982118, 0.9994802,
             0.9998856, 0.9999376, 0.9995945, 0.9999896, 1.0]

sgd_val = [0.81006736, 0.7995883, 0.8504865, 0.8604042, 0.8654566, 0.86938626, 0.8727545, 0.8800524, 0.8836078,
           0.8875374, 0.8819237, 0.8733159, 0.8729416, 0.8851048, 0.8699476, 0.8789296, 0.8727545, 0.8701347, 0.8785554,
           0.86470807, 0.869012, 0.87462574, 0.87743264, 0.8849177, 0.87649703, 0.88042665, 0.8819237, 0.8895958,
           0.88922155, 0.8845434, 0.8867889, 0.88529193, 0.8867889, 0.8866018, 0.88697606, 0.8877246, 0.8894087,
           0.8845434, 0.8907186, 0.8817365, 0.8880988, 0.8938997, 0.8817365, 0.8877246, 0.89296407, 0.89483535,
           0.89502245, 0.8953967, 0.8952096, 0.89502245]

adam_train = [0.8220746, 0.8621109, 0.88106376, 0.89548373, 0.907315, 0.9201235, 0.9284927, 0.938411, 0.94740397,
              0.9551078, 0.9602749, 0.96575385, 0.96971494, 0.9736344, 0.97794896, 0.9785, 0.98136944, 0.9828977,
              0.98419726, 0.9864221, 0.98789847, 0.98883414, 0.9894787, 0.99035203, 0.99000895, 0.99116296, 0.9916932,
              0.99216104, 0.9927848, 0.9938245, 0.99360615, 0.99414676, 0.9937621, 0.99446905, 0.9949369, 0.9945626,
              0.9939388, 0.9960597, 0.9951552, 0.99506164, 0.9960909, 0.9964444, 0.9962053, 0.99587256, 0.9963716,
              0.9962261, 0.99627805, 0.996434, 0.9966523, 0.99664193]

adam_val = [0.8536677, 0.8787425, 0.89127994, 0.8916542, 0.88267213, 0.8856662, 0.88398206, 0.8895958, 0.89801645,
            0.8847305, 0.8982036, 0.89202845, 0.8895958, 0.88342065, 0.8935254, 0.8903443, 0.8905314, 0.89502245,
            0.8909057, 0.8997006, 0.89408684, 0.8944611, 0.8918413, 0.8955838, 0.8924027, 0.89277697, 0.8903443,
            0.88342065, 0.8895958, 0.88641465, 0.89202845, 0.88622755, 0.8897829, 0.88416916, 0.8856662, 0.8879117,
            0.8894087, 0.8905314, 0.8905314, 0.89876497, 0.88529193, 0.89408684, 0.88622755, 0.88922155, 0.8982036,
            0.8888473, 0.8938997, 0.8895958, 0.8894087, 0.8909057]

rmsprop_train = [0.8153173, 0.8568919, 0.8658225, 0.86807853, 0.8690766, 0.8738798, 0.87205, 0.8705737, 0.8723099,
                 0.86855674, 0.86563534, 0.85732853, 0.85921025, 0.8579419, 0.85299313, 0.85303473, 0.854064,
                 0.83840686, 0.8290084, 0.81674045, 0.7963633, 0.7868609, 0.8274281, 0.8310669, 0.76810557, 0.73640656,
                 0.81834155, 0.75967395, 0.7639989, 0.7442455, 0.5938494, 0.5879546, 0.5962094, 0.6103799, 0.6127711,
                 0.6019587, 0.6136132, 0.60724014, 0.6077911, 0.616098, 0.6130726, 0.60362214, 0.6077496, 0.60379887,
                 0.61351967, 0.60810304, 0.60418355, 0.6131973, 0.60658514, 0.60515046]

rmsprop_val = [0.83177394, 0.8358907, 0.88117516, 0.87238026, 0.86583084, 0.877994, 0.88622755, 0.8633982, 0.8721931,
               0.8701347, 0.86938626, 0.8488024, 0.8409431, 0.88323355, 0.88061374, 0.8748129, 0.8205464, 0.7297904,
               0.619012, 0.8059506, 0.85797155, 0.8787425, 0.85872006, 0.87256736, 0.5097305, 0.61676645, 0.82466316,
               0.67234284, 0.59711826, 0.5301272, 0.502994, 0.5116018, 0.54247755, 0.5770958, 0.6085329, 0.5479042,
               0.528256, 0.54752994, 0.5778443, 0.559506, 0.55707335, 0.5692365, 0.53574103, 0.5662425, 0.5604416,
               0.5668039, 0.5623129, 0.5660554, 0.56212574, 0.5589446]

plt.plot(sgd_train, label='SGD_train')
plt.plot(sgd_val, label='SGD_val')
plt.plot(rmsprop_train, label='RMSprop_train', marker='x')
plt.plot(rmsprop_val, label='RMSprop_val', marker='x')
plt.plot(adam_train, label='Adam_train', marker='.')
plt.plot(adam_val, label='Adam_val', marker='.')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.5, 1])
plt.legend(loc='right')

plt.grid(True)
plt.show()

""" BINARY NEG/POSITIVE"""
l1l1_train = [0.7865935, 0.8201401, 0.84640175, 0.8569958, 0.8629946, 0.8688167, 0.87364066, 0.8768012, 0.88025284,
              0.8851288, 0.88860124, 0.8929158, 0.8967521, 0.89935124, 0.9034787, 0.90647286, 0.9090928, 0.9117127,
              0.91345936, 0.9164639, 0.91791946, 0.920425, 0.92272264, 0.92328405, 0.9258312, 0.92749465, 0.92812884,
              0.9292932, 0.9303745, 0.9321419, 0.93224585, 0.93281764, 0.93549997, 0.93557274]

l1l1_val = [0.7883608, 0.83345807, 0.85591316, 0.84337574, 0.85591316, 0.8574102, 0.8596557, 0.8669536, 0.8766841,
            0.8880988, 0.8924027, 0.89109284, 0.88716316, 0.89502245, 0.900262, 0.8952096, 0.8909057, 0.8808009,
            0.9043788, 0.9083084, 0.9133608, 0.9171033, 0.91148955, 0.91242516, 0.912238, 0.91261226, 0.9206587,
            0.9247754, 0.9249626, 0.9084955, 0.91186374, 0.9133608, 0.9148578, 0.91766465]

l1l2_train = [0.7939538, 0.8344873, 0.8508723, 0.8615391, 0.8720292, 0.878475, 0.8848065, 0.8902231, 0.8944233,
              0.8980517, 0.90045327, 0.9033331, 0.90493417, 0.9070239, 0.9081883, 0.91033, 0.910985, 0.9136049,
              0.91541386]

l1l2_val = [0.8085704, 0.83757484, 0.8585329, 0.8439371, 0.85310626, 0.8555389, 0.8450599, 0.8699476, 0.89502245,
            0.903256, 0.8993263, 0.89782935, 0.9034431, 0.9079341, 0.9055015, 0.8880988, 0.89726794, 0.8856662,
            0.8858533]

l2l1_train = [0.7995675, 0.8281247, 0.85234857, 0.86379516, 0.8723827, 0.88167715, 0.88855964, 0.8947144, 0.8994032,
              0.9026158, 0.9058595, 0.90834427, 0.91135925, 0.91366726, 0.91541386, 0.91843927, 0.91982204, 0.9229098,
              0.924043, 0.9255609]

l2l1_val = [0.81886226, 0.8340195, 0.8553518, 0.8632111, 0.869012, 0.87163174, 0.8931512, 0.8976422, 0.9051272,
            0.9090569, 0.9043788, 0.9013847, 0.90886974, 0.91092813, 0.91672903, 0.90681136, 0.8976422, 0.89127994,
            0.89577097, 0.8974551]

l2l2_train = [0.80228084, 0.8396752, 0.8605722, 0.8683592, 0.87404615, 0.8796914, 0.88469213, 0.89008796, 0.8930718,
              0.8962323, 0.8971264, 0.90056765, 0.9010043, 0.9045911, 0.9055268, 0.9077101, 0.909176]

l2l2_val = [0.8212949, 0.8592814, 0.8671407, 0.86938626, 0.8759356, 0.8819237, 0.8877246, 0.89408684, 0.89408684,
            0.89502245, 0.89876497, 0.900262, 0.8997006, 0.8894087, 0.88323355, 0.8738772, 0.88529193]

plt.plot(l1l1_train, label='L1/L1 - Train')
plt.plot(l1l1_val, label='L1/L1 - Val')

plt.plot(l1l2_train, label='L1/L2 - Train', marker='x')
plt.plot(l1l2_val, label='L1/L2 - Val', marker='x')

plt.plot(l2l1_train, label='L2/L1 - Train', marker='.')
plt.plot(l2l1_val, label='L2/L1 - Val', marker='.')

plt.plot(l2l2_train, label='L2/L2 - Train', marker='^')
plt.plot(l2l2_val, label='L2/L2 - Val', marker='^')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.0, 1])
plt.legend(loc='lower right')

plt.grid(True)
plt.show()

""" FIVE MODEL"""
l1l1_train = [0.23118903, 0.23020968, 0.23016393, 0.23016393, 0.23019443, 0.23020968]

l1l1_val = [0.23810841, 0.23810841, 0.23810841, 0.23810841, 0.23810841, 0.23810841]

l1l2_train = [0.23118903, 0.2376668, 0.35676706, 0.39900878, 0.412337, 0.4161037, 0.41718644, 0.4201449, 0.42087686,
              0.42139536, 0.4225391, 0.42400306, 0.4232253]

l1l2_val = [0.23810841, 0.29065266, 0.3863385, 0.39076328, 0.4045907, 0.41454646, 0.42035398, 0.43003318, 0.41980088,
            0.41731194, 0.4256084, 0.39878318, 0.42118362]

l2l1_train = [0.36727133, 0.40954632, 0.4183454, 0.4238963, 0.42841023, 0.4314754, 0.43231416, 0.43434235, 0.4353946,
              0.4372398, 0.43861228, 0.4423942, 0.4455814, 0.4501258, 0.45463973, 0.4585284, 0.46500954, 0.47155166,
              0.4774533, 0.4820587, 0.4873656, 0.4913458, 0.49593595, 0.5018986, 0.50555855, 0.51086545, 0.5176668,
              0.52448344, 0.5289363, 0.5336485, 0.5373542, 0.54263055, 0.54963017, 0.55437285, 0.55902404, 0.5649257,
              0.5701411, 0.5756767, 0.5804956, 0.5836676, 0.5883645, 0.59086543]

l2l1_val = [0.41178098, 0.43086284, 0.4186947, 0.42090708, 0.42948008, 0.43390486, 0.43943584, 0.44054204, 0.4256084,
            0.41261062, 0.4159292, 0.43888274, 0.446073, 0.44330752, 0.42311946, 0.45436946, 0.4579646, 0.44386062,
            0.48561946, 0.47759956, 0.49668142, 0.50027657, 0.49004424, 0.5058075, 0.49917036, 0.5124447, 0.5058075,
            0.5154867, 0.5301438, 0.53539824, 0.49115044, 0.5442478, 0.5262721, 0.5373341, 0.5425885, 0.545354,
            0.56443584, 0.5577987, 0.55835176, 0.5420354, 0.5470133, 0.5334624]

l2l2_train = [0.3935823, 0.4311704, 0.43756005, 0.44420892, 0.452764, 0.47080442, 0.4885551, 0.5036828, 0.5186733,
              0.533618, 0.5474342, 0.5640107, 0.58185285, 0.5998475, 0.6184217, 0.63670605, 0.6580862, 0.68059474,
              0.6985741, 0.72204345, 0.7436371, 0.7634769, 0.7777964, 0.7951811, 0.8019367, 0.81808615, 0.8276172,
              0.8377125, 0.84474266, 0.85765916, 0.86061764, 0.86743426, 0.8737324, 0.87740755, 0.8828822, 0.88471216,
              0.8904765, 0.89268774, 0.89755243, 0.8960122, 0.9033931]

l2l2_val = [0.43362832, 0.43611726, 0.44137168, 0.44551992, 0.460177, 0.48727876, 0.5091261, 0.5199115, 0.51963496,
            0.5240597, 0.5470133, 0.53152657, 0.545354, 0.5608407, 0.5566925, 0.5608407, 0.55835176, 0.5370575,
            0.5660951, 0.5699668, 0.553927, 0.5630531, 0.5608407, 0.5685841, 0.5801991, 0.5674779, 0.5749447, 0.5909845,
            0.58379424, 0.5813053, 0.59679204, 0.5959624, 0.58268803, 0.58600664, 0.58490044, 0.6061947, 0.5948562,
            0.5959624, 0.59402657, 0.5818584, 0.5915376]

plt.plot(l1l1_train, label='L1/L1 - Train')
plt.plot(l1l1_val, label='L1/L1 - Val')

plt.plot(l1l2_train, label='L1/L2 - Train', marker='x')
plt.plot(l1l2_val, label='L1/L2 - Val', marker='x')

plt.plot(l2l1_train, label='L2/L1 - Train', marker='.')
plt.plot(l2l1_val, label='L2/L1 - Val', marker='.')

plt.plot(l2l2_train, label='L2/L2 - Train', marker='^')
plt.plot(l2l2_val, label='L2/L2 - Val', marker='^')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.1, 1])
plt.legend(loc='lower right')

plt.grid(True)
plt.show()

""" MALIGNANT MASS REGUL """
l1l1_train = [0.5984485, 0.5984856, 0.5986749, 0.5984856, 0.5984856, 0.5985171]

l1l1_val = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

l1l2_train = [0.59848005, 0.5984856, 0.5986749, 0.5984856, 0.59858024, 0.5985171]

l1l2_val = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

l2l1_train = [0.5975971, 0.67114687, 0.70086765, 0.70553714, 0.7066099, 0.7071778, 0.7081874]

l2l1_val = [0.5, 0.70681816, 0.69545454, 0.6982955, 0.6982955, 0.67329544, 0.66875]

l2l2_train = [0.66003406, 0.7015302, 0.705127, 0.70575804, 0.7055056, 0.708219, 0.7108692, 0.7143398, 0.7189462,
              0.7221013, 0.7236157, 0.725351, 0.7268654, 0.72459376, 0.73096704, 0.7343114, 0.736867, 0.7422622,
              0.74945575, 0.7560499, 0.7597413, 0.76251775, 0.76359046, 0.76560974]

l2l2_val = [0.7056818, 0.6454545, 0.6619318, 0.67045456, 0.70625, 0.6721591, 0.70454544, 0.6943182, 0.7193182,
            0.7284091, 0.7346591, 0.7340909, 0.7386364, 0.7460227, 0.7181818, 0.74147725, 0.7409091, 0.7346591,
            0.7517046, 0.74886364, 0.74545455, 0.7221591, 0.7301136, 0.70511365]

plt.plot(l1l1_train, label='L1/L1 - Train')
plt.plot(l1l1_val, label='L1/L1 - Val')

plt.plot(l1l2_train, label='L1/L2 - Train', marker='x')
plt.plot(l1l2_val, label='L1/L2 - Val', marker='x')

plt.plot(l2l1_train, label='L2/L1 - Train', marker='.')
plt.plot(l2l1_val, label='L2/L1 - Val', marker='.')

plt.plot(l2l2_train, label='L2/L2 - Train', marker='^')
plt.plot(l2l2_val, label='L2/L2 - Val', marker='^')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.45, 0.8])
plt.legend(loc='lower right')

plt.grid(True)
plt.show()

"""MM MIN MAX"""
max_pool_tr = [0.6757379, 0.7149708, 0.7236157, 0.7392018, 0.7513803, 0.7604039, 0.7694589, 0.7798706, 0.7930273,
               0.7996214, 0.81179994, 0.8225272, 0.83754534, 0.850071, 0.8592838, 0.87480676, 0.8834201, 0.89402115,
               0.89976335, 0.9038965, 0.9131409, 0.9200189, 0.9285692, 0.9263922, 0.93320715, 0.9370563, 0.93664616,
               0.9422622, 0.945228, 0.94806755, 0.9513804, 0.9535574, 0.9565231, 0.9546301, 0.95854235, 0.9599621,
               0.9589841, 0.9632434, 0.9685755, 0.96633536, 0.96598834, 0.96655625, 0.9700899, 0.97289795, 0.97359204,
               0.9740022, 0.9750118, 0.9757375, 0.9783878, 0.9778829]

max_pool_val = [0.64602274, 0.66988635, 0.6943182, 0.7403409, 0.7477273, 0.7375, 0.74886364, 0.7607955, 0.76193184,
                0.7653409, 0.7653409, 0.75795454, 0.75454545, 0.7403409, 0.7318182, 0.7443182, 0.76363635, 0.7556818,
                0.7477273, 0.74545455, 0.7318182, 0.74375, 0.73238635, 0.75454545, 0.75852275, 0.7517046, 0.75795454,
                0.74147725, 0.7409091, 0.74715906, 0.7431818, 0.74147725, 0.7465909, 0.73636365, 0.76022726, 0.73238635,
                0.75454545, 0.7607955, 0.74488634, 0.7613636, 0.7465909, 0.72329545, 0.74375, 0.74545455, 0.74147725,
                0.7443182, 0.74886364, 0.75454545, 0.74147725, 0.7261364]

min_pool_tr = [0.67904896, 0.7168639, 0.7250986, 0.72913706, 0.73626757, 0.7404007, 0.7460798, 0.752106, 0.7571857,
               0.7634958, 0.7722669, 0.7818899, 0.7860546, 0.79662406, 0.8059315, 0.8086764, 0.81769997, 0.82366306,
               0.8318662, 0.83760846, 0.8432876, 0.8503865, 0.8570753, 0.8674239, 0.86938006, 0.8741442, 0.88196874,
               0.8907714, 0.8964821, 0.9033286, 0.91045904, 0.9164537, 0.9208077, 0.9296104, 0.93317556, 0.9352895,
               0.93390125, 0.94204134, 0.94664776, 0.94620603, 0.9485092, 0.95642847, 0.9552295, 0.9581322, 0.95797443,
               0.9610033, 0.9616974, 0.9626755, 0.9646316, 0.9653258]

min_pool_val = [0.68125,
                0.6494318,
                0.6721591,
                0.70681816,
                0.72727275,
                0.7403409,
                0.7403409,
                0.7426136,
                0.74715906,
                0.7460227,
                0.7517046,
                0.75625,
                0.75511366,
                0.7534091,
                0.76761365,
                0.7522727,
                0.7539773,
                0.74204546,
                0.7539773,
                0.7278409,
                0.7284091,
                0.70852274,
                0.7153409,
                0.7073864,
                0.70625,
                0.7221591,
                0.7181818,
                0.72386366,
                0.72329545,
                0.7431818,
                0.74488634,
                0.74147725,
                0.7426136,
                0.76193184,
                0.76022726,
                0.75454545,
                0.7647727,
                0.75511366,
                0.7392045,
                0.75454545,
                0.77272725,
                0.77613634,
                0.7698864,
                0.7613636,
                0.74886364,
                0.7715909,
                0.7625,
                0.74545455,
                0.7613636,
                0.73579544]

avg_pool_train = [0.6701249, 0.7146553, 0.7209023, 0.73150337, 0.73986435, 0.7457643, 0.7288531, 0.7236157, 0.739044,
                  0.7141505, 0.7140243, 0.7317873, 0.74418676, 0.75434613, 0.7684177, 0.7829626, 0.79182833, 0.801546,
                  0.8077299, 0.8113583, 0.8213283, 0.82908976, 0.83669347, 0.84101593, 0.84669507, 0.84754694,
                  0.8558448, 0.85950464, 0.8698533, 0.870926, 0.8728822, 0.87717307, 0.8799495, 0.8853762, 0.8857548,
                  0.8915602, 0.8966083, 0.89670295, 0.89963716, 0.90471685, 0.90613663, 0.907935, 0.91282535,
                  0.91503394, 0.9137088, 0.91591734, 0.9216596, 0.91885155, 0.9185045, 0.92812747]
aver_pool_val = [0.6869318, 0.6857954, 0.70113635, 0.7090909, 0.73125, 0.7346591, 0.73068184, 0.7340909, 0.7426136,
                 0.675, 0.71022725, 0.73579544, 0.7431818, 0.7409091, 0.75113636, 0.74488634, 0.73238635, 0.7778409,
                 0.7443182, 0.76193184, 0.7522727, 0.76704544, 0.75625, 0.7659091, 0.7738636, 0.7772727, 0.7880682,
                 0.775, 0.775, 0.7744318, 0.78409094, 0.76704544, 0.7704545, 0.7647727, 0.76931816, 0.76931816, 0.7875,
                 0.7755682, 0.76420456, 0.7704545, 0.7625, 0.77329546, 0.7744318, 0.76420456, 0.77102274, 0.7659091,
                 0.7522727, 0.7664773, 0.7517046, 0.7613636]

plt.plot(max_pool_tr,
         label='Max Pooling - Train')
plt.plot(max_pool_val,
         label='Max Pooling - Val')

plt.plot(min_pool_tr,
         label='Min Pooling - Train',
         marker='x')
plt.plot(min_pool_val,
         label='Min Pooling - Val',
         marker='x')

plt.plot(avg_pool_train,
         label='Avg Pooling - Train',
         marker='.')
plt.plot(aver_pool_val,
         label='Avg Pooling - Val',
         marker='.')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.6, 1])
plt.legend(loc='upper left')

plt.grid(True)
plt.show()

""" FIVE MIN MAZ"""
max_pool_tr = [0.3946494, 0.43655357, 0.45026305, 0.47289363, 0.49744567, 0.5199085, 0.5403889, 0.5636599, 0.59060615,
               0.625467, 0.66441476, 0.71112466, 0.7570263, 0.80381244, 0.83762103, 0.86879146, 0.8980557, 0.91719407,
               0.93212354, 0.94372857, 0.9533664, 0.9626687, 0.9672741, 0.9724285, 0.97744566, 0.9798246, 0.9814106,
               0.9814411, 0.98357606, 0.9851315, 0.987907, 0.98722076, 0.9899504, 0.9891422, 0.99327487, 0.9927259,
               0.99324435, 0.9940374, 0.9907434, 0.99522686, 0.9953946, 0.99402213, 0.99306136, 0.99350363, 0.99550134,
               0.9985665, 0.9980785, 0.99458635, 0.99540985, 0.9965078]

max_pool_val = [0.41399336, 0.42146018, 0.45768806, 0.48230088, 0.5011062, 0.52571905, 0.5409292, 0.5528208, 0.5608407,
                0.5575221, 0.57992256, 0.59457964, 0.5829646, 0.5862832, 0.585177, 0.60896015, 0.59457964, 0.6020465,
                0.6125553, 0.60868365, 0.6285951, 0.6225111, 0.6214049, 0.63384956, 0.6498894, 0.6482301, 0.6465708,
                0.6308075, 0.6490597, 0.647677, 0.6368916, 0.64961284, 0.642146, 0.6670354, 0.65486723, 0.6568031,
                0.6706305, 0.6670354, 0.66288716, 0.6653761, 0.6642699, 0.6609513, 0.6598451, 0.64629424, 0.6664823,
                0.67809737, 0.6816925, 0.65099555, 0.6601217, 0.66150445]

min_pool_tr = [0.3933689, 0.44304994, 0.454289, 0.46412504, 0.4770263, 0.4861304, 0.4981319, 0.5104537, 0.52405643,
               0.5395044, 0.5557301, 0.5782539, 0.6057644, 0.63926804, 0.6793595, 0.72643536, 0.773008, 0.81313,
               0.8484331, 0.8764316, 0.8962257, 0.9110027, 0.92698437, 0.93656117, 0.946016, 0.9503774, 0.9598475,
               0.9622112, 0.9680976, 0.97252, 0.97553945, 0.97732365, 0.97823864, 0.9802974, 0.9818681, 0.98366755,
               0.98261535, 0.98627526, 0.9892032, 0.99149066, 0.99127716, 0.99200916, 0.98927945, 0.9908197, 0.9929851,
               0.9917347, 0.9945101, 0.9939611, 0.9939001, 0.9937781]

min_pool_val = [0.4363938,
                0.44413716,
                0.45022124,
                0.4585177,
                0.47234514,
                0.47123894,
                0.47981194,
                0.49336284,
                0.49557522,
                0.46847346,
                0.4897677,
                0.5176991,
                0.5284845,
                0.52820796,
                0.52599555,
                0.54231197,
                0.545354,
                0.53650445,
                0.54977876,
                0.5478429,
                0.5577987,
                0.5597345,
                0.57632744,
                0.576604,
                0.57245576,
                0.5854535,
                0.5943031,
                0.60259956,
                0.6061947,
                0.5818584,
                0.5965155,
                0.5926438,
                0.6020465,
                0.6117257,
                0.5943031,
                0.60757744,
                0.60536504,
                0.60757744,
                0.6136615,
                0.6117257,
                0.6169801,
                0.6084071,
                0.5995575,
                0.6125553,
                0.6001106,
                0.62306416,
                0.6261062,
                0.6178097,
                0.6191925,
                0.61006635]

avg_pool_train = [0.3957927, 0.4433092, 0.45369425, 0.46386582, 0.4745101, 0.48581013, 0.49706444, 0.51069766,
                  0.52596265, 0.54275256, 0.56606936, 0.59274113, 0.62561953, 0.66179186, 0.70273733, 0.74679375,
                  0.7812581, 0.8145787, 0.839573, 0.85860467, 0.88067096, 0.89523447, 0.90851694, 0.91852075,
                  0.9294091, 0.9361342, 0.9425086, 0.95008767, 0.9548151, 0.9567518, 0.9626687, 0.9682959,
                  0.96884483, 0.973435, 0.97457874, 0.9742127, 0.9784979, 0.9810751, 0.9819443, 0.9823561, 0.984735,
                  0.9823561, 0.9852993, 0.987053, 0.9866565, 0.9889592, 0.9904384, 0.98982847, 0.9913534,
                  0.9908654]
aver_pool_val = [0.42920354, 0.44220132, 0.45602876, 0.46349558,
                 0.47759956, 0.48589602, 0.4875553, 0.5033186,
                 0.50884956, 0.49446902, 0.5016593, 0.5124447,
                 0.5279314, 0.5154867, 0.5542035, 0.5348451,
                 0.54618365, 0.5688606, 0.5674779, 0.5658186,
                 0.55586284, 0.5915376, 0.5862832, 0.58600664,
                 0.5984513, 0.602323, 0.60536504, 0.6095133,
                 0.6200221, 0.6131084, 0.63274336, 0.6202987,
                 0.62582964, 0.6200221, 0.6272124, 0.6330199,
                 0.6136615, 0.6501659, 0.6186394, 0.62582964,
                 0.6277655, 0.63550884, 0.6382743, 0.6313606,
                 0.64684737, 0.6609513, 0.6498894, 0.6504425,
                 0.6487832, 0.6493363]

plt.plot(max_pool_tr,
         label='Max Pooling - Train')
plt.plot(max_pool_val,
         label='Max Pooling - Val')

plt.plot(min_pool_tr,
         label='Min Pooling - Train',
         marker='x')
plt.plot(min_pool_val,
         label='Min Pooling - Val',
         marker='x')

plt.plot(avg_pool_train,
         label='Avg Pooling - Train',
         marker='.')
plt.plot(aver_pool_val,
         label='Avg Pooling - Val',
         marker='.')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.35, 1])
plt.legend(loc='upper left')

plt.grid(True)
plt.show()

""" NEGATIVE MIN MAX"""

max_pool_tr = [0.8220746, 0.8621109, 0.88106376, 0.89548373, 0.907315, 0.9201235, 0.9284927, 0.938411, 0.94740397, 0.9551078, 0.9602749, 0.96575385, 0.96971494, 0.9736344, 0.97794896, 0.9785, 0.98136944, 0.9828977, 0.98419726, 0.9864221, 0.98789847, 0.98883414, 0.9894787, 0.99035203, 0.99000895, 0.99116296, 0.9916932, 0.99216104, 0.9927848, 0.9938245, 0.99360615, 0.99414676, 0.9937621, 0.99446905, 0.9949369, 0.9945626, 0.9939388, 0.9960597, 0.9951552, 0.99506164, 0.9960909, 0.9964444, 0.9962053, 0.99587256, 0.9963716, 0.9962261, 0.99627805, 0.996434, 0.9966523, 0.99664193]

max_pool_val =[0.8536677, 0.8787425, 0.89127994, 0.8916542, 0.88267213, 0.8856662, 0.88398206, 0.8895958, 0.89801645, 0.8847305, 0.8982036, 0.89202845, 0.8895958, 0.88342065, 0.8935254, 0.8903443, 0.8905314, 0.89502245, 0.8909057, 0.8997006, 0.89408684, 0.8944611, 0.8918413, 0.8955838, 0.8924027, 0.89277697, 0.8903443, 0.88342065, 0.8895958, 0.88641465, 0.89202845, 0.88622755, 0.8897829, 0.88416916, 0.8856662, 0.8879117, 0.8894087, 0.8905314, 0.8905314, 0.89876497, 0.88529193, 0.89408684, 0.88622755, 0.88922155, 0.8982036, 0.8888473, 0.8938997, 0.8895958, 0.8894087, 0.8909057]

min_pool_tr = [0.81388265, 0.83655626, 0.84494627, 0.8498534, 0.8545318, 0.8587424, 0.8633897, 0.86765224, 0.8722787, 0.8775913, 0.8840164, 0.8882686, 0.8944025, 0.90314597, 0.9104028, 0.9186992, 0.9234608, 0.9285655, 0.93439794, 0.9374857, 0.94156116, 0.9481422, 0.95071006, 0.95442164, 0.9582372, 0.96088827, 0.9638721, 0.965785, 0.9694758, 0.9718774, 0.9726675, 0.973572, 0.975381, 0.9766806, 0.9791238, 0.97948766, 0.9808288, 0.98127586, 0.98163974, 0.9823883, 0.9839374, 0.9849978, 0.9856528, 0.9857879, 0.9867652, 0.9871499, 0.9881896, 0.98752415, 0.9882519, 0.9882935]

min_pool_val =[0.80782187, 0.8401946, 0.8328967, 0.85104793, 0.84842813, 0.84636974, 0.8532934, 0.85198355, 0.85872006, 0.8525449, 0.8564746, 0.8508608, 0.85572606, 0.8439371, 0.85198355, 0.8415045, 0.84992516, 0.84431136, 0.8495509, 0.8446856, 0.8495509, 0.84842813, 0.8435629, 0.8450599, 0.85273206, 0.84225297, 0.8388847, 0.8420659, 0.82073355, 0.8145584, 0.81699103, 0.8255988, 0.8310254, 0.8310254, 0.8400075, 0.83476794, 0.8349551, 0.82859284, 0.837762, 0.840756, 0.83532935, 0.82297903, 0.83607787, 0.83233535, 0.8330838, 0.83345807, 0.8255988, 0.84131736, 0.8476796, 0.83177394]

avg_pool_train =[0.8138723, 0.8387395, 0.8451646, 0.86110246, 0.8669141, 0.87348473, 0.87879735, 0.88941216, 0.90043247, 0.911536, 0.9216622, 0.93013537, 0.9398353, 0.94584453, 0.95102197, 0.95611626, 0.96091944, 0.96642965, 0.9706922, 0.9730314, 0.974934, 0.9769925, 0.97915494, 0.9806313, 0.9829705, 0.9829185, 0.98514336, 0.9852889, 0.9878465, 0.9880544, 0.98910445, 0.9889797, 0.98975945, 0.9907471, 0.9908823, 0.9910694, 0.99231696, 0.9922234, 0.99214023, 0.9927848, 0.9931279, 0.9914229, 0.99258727, 0.994022, 0.9943027, 0.99410516, 0.9943859, 0.99416757, 0.9952696, 0.9954983]
aver_pool_val =[0.82092065, 0.8420659, 0.8495509, 0.84842813, 0.86152697, 0.86377245, 0.85778445, 0.8632111, 0.86283684, 0.8652695, 0.8575973, 0.86152697, 0.8590943, 0.8575973, 0.8581587, 0.8566617, 0.85497755, 0.86358535, 0.8602171, 0.8575973, 0.86077845, 0.85516465, 0.85591316, 0.85984284, 0.8594686, 0.8525449, 0.8575973, 0.8574102, 0.8590943, 0.86096555, 0.86152697, 0.85778445, 0.8538548, 0.8575973, 0.86676645, 0.85310626, 0.86077845, 0.85890716, 0.86283684, 0.86676645, 0.8592814, 0.8592814, 0.85516465, 0.85497755, 0.8611527, 0.8561003, 0.8596557, 0.86302394, 0.8633982, 0.86096555]


plt.plot(max_pool_tr,
         label='Max Pooling - Train')
plt.plot(max_pool_val,
         label='Max Pooling - Val')

plt.plot(min_pool_tr,
         label='Min Pooling - Train',
         marker='x')
plt.plot(min_pool_val,
         label='Min Pooling - Val',
         marker='x')

plt.plot(avg_pool_train,
         label='Avg Pooling - Train',
         marker='.')
plt.plot(aver_pool_val,
         label='Avg Pooling - Val',
         marker='.')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.8, 1])
plt.legend(loc='upper left')

plt.grid(True)
plt.show()